{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\vijay\\\\react-learning\\\\NEXT JS\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport { MongoClient } from 'mongodb';\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  console.log('props', props);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: \"https://upload.wikimedia.org/wikipedia/commons/3/3f/Ubcity2.jpg\",\n      title: \"A first Meetup\",\n      address: \"Some Street,S,Some City\",\n      description: \"The Meetup description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://vijayhegde888:1234@cluster0.gzy7x.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetUpscollection = db.collection('meetups');\n  const meetups = await meetUpscollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meatup => ({\n      params: {\n        meetupId: meatup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://vijayhegde888:1234@cluster0.gzy7x.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetUpscollection = db.collection('meetups');\n  const selectedMeetup = await meetUpscollection.findOne({\n    _id: meetupId\n  }); // fetch data \n\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/vijay/react-learning/NEXT JS/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Fragment","MongoClient","MeetupDetail","MeetupDetails","props","console","log","getStaticPaths","client","connect","db","meetUpscollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meatup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","meetupData"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAAQC,WAAR,QAA0B,SAA1B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,KAApB;AACA,sBACI,QAAC,QAAD;AAAA,2BACI,QAAC,YAAD;AACC,MAAA,KAAK,EAAC,iEADP;AAEA,MAAA,KAAK,EAAC,gBAFN;AAGA,MAAA,OAAO,EAAC,yBAHR;AAIA,MAAA,WAAW,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUC;;AACD,OAAO,eAAeG,cAAf,GAA+B;AAElC,QAAMC,MAAM,GAAC,MAAOP,WAAW,CAACQ,OAAZ,CAAqB,0FAArB,CAApB;AACA,QAAMC,EAAE,GAAEF,MAAM,CAACE,EAAP,EAAV;AACA,QAAMC,iBAAiB,GAAED,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMC,OAAO,GAAC,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAApB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAC,KADN;AAEHC,IAAAA,KAAK,EAACN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAG;AACnBC,MAAAA,MAAM,EAAC;AACHC,QAAAA,QAAQ,EAACF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADN;AADY,KAAH,CAAlB;AAFH,GAAP;AAWH;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AAEzC,QAAMH,QAAQ,GAAEG,OAAO,CAACJ,MAAR,CAAeC,QAA/B;AACA,QAAMf,MAAM,GAAC,MAAOP,WAAW,CAACQ,OAAZ,CAAqB,0FAArB,CAApB;AACA,QAAMC,EAAE,GAAEF,MAAM,CAACE,EAAP,EAAV;AACA,QAAMC,iBAAiB,GAAED,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMe,cAAc,GAAC,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAACb,IAAAA,GAAG,EAACQ;AAAL,GAA1B,CAA3B,CANyC,CAUzC;;AACA,SAAO;AACHnB,IAAAA,KAAK,EAAC;AACFyB,MAAAA,UAAU,EAACF;AADT;AADH,GAAP;AAKH;AACD,eAAexB,aAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport {MongoClient} from 'mongodb'\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nfunction MeetupDetails(props){\r\n    console.log('props',props)\r\n    return (\r\n        <Fragment>\r\n            <MeetupDetail\r\n             image=\"https://upload.wikimedia.org/wikipedia/commons/3/3f/Ubcity2.jpg\"\r\n            title=\"A first Meetup\"\r\n            address=\"Some Street,S,Some City\"\r\n            description=\"The Meetup description\"\r\n            />\r\n        </Fragment>\r\n    )\r\n    }\r\n    export async function getStaticPaths(){\r\n\r\n        const client=await  MongoClient.connect( \"mongodb+srv://vijayhegde888:1234@cluster0.gzy7x.mongodb.net/?retryWrites=true&w=majority\")\r\n        const db= client.db();\r\n        const meetUpscollection =db.collection('meetups');\r\n        const meetups=await meetUpscollection.find({},{_id:1}).toArray();\r\n        client.close();\r\n        return {\r\n            fallback:false,\r\n            paths:meetups.map(meatup=>({\r\n                    params:{\r\n                        meetupId:meatup._id.toString()\r\n                    }  \r\n                \r\n                }))\r\n                                \r\n            \r\n        }\r\n    }\r\n    export async function getStaticProps(context){\r\n\r\n        const meetupId= context.params.meetupId\r\n        const client=await  MongoClient.connect( \"mongodb+srv://vijayhegde888:1234@cluster0.gzy7x.mongodb.net/?retryWrites=true&w=majority\")\r\n        const db= client.db();\r\n        const meetUpscollection =db.collection('meetups');\r\n        const selectedMeetup=await meetUpscollection.findOne({_id:meetupId})\r\n\r\n        \r\n\r\n        // fetch data \r\n        return {\r\n            props:{\r\n                meetupData:selectedMeetup\r\n            }\r\n        }\r\n    }\r\n    export default MeetupDetails;"]},"metadata":{},"sourceType":"module"}